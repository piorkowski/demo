services:
  php:
    build:
      context: ./
      dockerfile: docker/php/Dockerfile
    volumes:
      - .:/app:cached
    working_dir: /app
    ports:
      - "9000:9000"
    depends_on:
      - redis
      - database
      - localstack
    networks:
      - api

  nginx:
    image: nginx:1.15.8-alpine
    ports:
      - 127.0.0.1:${NGINX_PORT:-8080}:80
    volumes:
      - .:/app:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/logs:/var/log/nginx/
    links:
      - php
    depends_on:
      - redis
    networks:
      - api

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - api

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB:-app} -U ${POSTGRES_USER:-app} || exit 1"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    networks:
      - api

  localstack:
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./docker/aws/localstack/volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - api
networks:
  api:
    driver: bridge
